"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3726],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(g,l(l({ref:t},d),{},{components:n})):r.createElement(g,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9859:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={},s="@On - Discord events",c={unversionedId:"decorators/general/on",id:"decorators/general/on",isDocsHomePage:!1,title:"@On - Discord events",description:"You can use this decorator to declare methods that will be executed whenever a Discord event is triggered.",source:"@site/docs/decorators/general/on.md",sourceDirName:"decorators/general",slug:"/decorators/general/on",permalink:"/docs/decorators/general/on",editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/on.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Guild",permalink:"/docs/decorators/general/guild"},next:{title:"@Once - Discord events",permalink:"/docs/decorators/general/once"}},d=[{value:"Get the event payload",id:"get-the-event-payload",children:[]},{value:"Signature",id:"signature",children:[]},{value:"Parameters",id:"parameters",children:[{value:"Name",id:"name",children:[]},{value:"EventParams",id:"eventparams",children:[]}]}],p={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"on---discord-events"},"@On - Discord events"),(0,o.kt)("p",null,"You can use this decorator to declare methods that will be executed whenever a Discord event is triggered."),(0,o.kt)("p",null,"Our methods must be decorated with the ",(0,o.kt)("inlineCode",{parentName:"p"},"@On(event: string)")," or ",(0,o.kt)("a",{parentName:"p",href:"/docs/decorators/general/once"},"@Once(event: string)")," decorator."),(0,o.kt)("p",null,"It's that simple, when the event is triggered, the method is called:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Discord, On, Once } from "discordx";\n\n@Discord()\nabstract class AppDiscord {\n  @On("messageCreate")\n  private onMessage() {\n    // ...\n  }\n\n  @Once("messageDelete")\n  private onMessageDelete() {\n    // ...\n  }\n}\n')),(0,o.kt)("h2",{id:"get-the-event-payload"},"Get the event payload"),(0,o.kt)("p",null,"For each event a list of arguments is injected in your decorated method, you can type this list thanks to the ",(0,o.kt)("inlineCode",{parentName:"p"},'ArgsOf<"YOUR_EVENT">')," type provided by discord.",(0,o.kt)("strong",{parentName:"p"},"ts"),"."),(0,o.kt)("p",null,"You also receive other useful arguments after that:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The event payload (",(0,o.kt)("inlineCode",{parentName:"li"},'ArgsOf<"YOUR_EVENT">'),")"),(0,o.kt)("li",{parentName:"ol"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"Client")," instance"),(0,o.kt)("li",{parentName:"ol"},"The ",(0,o.kt)("a",{parentName:"li",href:"/docs/decorators/general/guard"},"guards")," payload")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You should use JS desctructuring for ",(0,o.kt)("inlineCode",{parentName:"p"},'ArgsOf<"YOUR_EVENT">')," like in this example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Discord, On, Client, ArgsOf } from "discordx";\n\n@Discord()\nabstract class AppDiscord {\n  @On("messageCreate")\n  private onMessage(\n    [message]: ArgsOf<"messageCreate">, // Type message automatically\n    client: Client, // Client instance injected here,\n    guardPayload: any\n  ) {\n    // ...\n  }\n}\n')),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"On(event: DiscordEvents, params?: EventParams)\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("h3",{id:"name"},"Name"),(0,o.kt)("p",null,"The event name."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"),(0,o.kt)("th",{parentName:"tr",align:null},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,o.kt)("h3",{id:"eventparams"},"EventParams"),(0,o.kt)("p",null,"Multiple options, check below."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"),(0,o.kt)("th",{parentName:"tr",align:null},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"object"),(0,o.kt)("td",{parentName:"tr",align:null},"undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h4",{id:"botids"},"botIds"),(0,o.kt)("p",null,"Array of bot ids, for which only the event will be executed."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string","[ ]"),(0,o.kt)("td",{parentName:"tr",align:null},"[ ]")))))}u.isMDXComponent=!0}}]);